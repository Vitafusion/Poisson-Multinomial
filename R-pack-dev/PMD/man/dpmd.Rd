% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Poisson-Multinomial_functions.R
\name{dpmd}
\alias{dpmd}
\title{Probability Mass of Poisson-Multinomial Distributions}
\usage{
dpmd(pp, method = "DFT-CF", vec = c(0, 0, 0, 0, 0), B = 100)
}
\arguments{
\item{pp}{A matrix of probabilities.
Each row of pp should add up to 1.}

\item{method}{Method selected by user to compute the probability mass. There are totally 4 methods.
\code{"DFT-CF"}: An exact method to calculate all probability mass points of Poisson-Multinomial Distributions via FFT algorithm.
 \code{"simulation"}: A simulation method calculating all probability mass points.
 \code{"NA by demands"}: An approximation method using Normal approximation to compute the probability for the 'vec' vector input by user.
 \code{"simulation by demands"}: The same simulation method as above just to compute single probability mass point as input by user.}

\item{vec}{Result vector(probability mass point) specified by user.
eg. pp is 4 by 3 matrix then a user might be interested in the probability of getting result: vec=c(0,0,1,2).}

\item{B}{Simulation repeat time.}
}
\value{
For a single mass point, \code{dpmd} returns a probability.
        For all probability mass points of a given \code{pp}, it returns a multi-dimensional array. For instance, for the \code{pp} matrix in the following example, the value of the array element \eqn{a_{1,2,1}} = 0.90 means the value of probability mass point (0,1,0,2) is 0.90.
}
\description{
Computation of probability mass for Poisson-Multinomial Distributions using exact, simulation, approximation methods. Users are allowed to specified a method and can choose to compute single mass point or all mass points. For simulation method, users can also choose the repeating time to enhance the accuracy of outcomes.
}
\examples{

pp=matrix(c(.1, .1, .1, .7, .1, .3, .3, .3, .5, .2, .1, .2), nrow=3, byrow=TRUE)
dpmd(pp)
dpmd(pp,"simulation",B=10^3)
dpmd(pp,"NA by demands", vec = c(0,0,1,2))
dpmd(pp,"simulation by demands", vec = c(0,0,1,2), B=10^3)
}
